// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: sales.sql

package sqlc

import (
	"context"
	"database/sql"
)

const create_Sale = `-- name: Create_Sale :one
INSERT INTO sales (brand_id, amount, currency, timestamp)
VALUES ($1, $2, $3, $4)
ON CONFLICT (id) DO NOTHING
RETURNING id, brand_id, amount, currency, timestamp, created_at
`

type Create_SaleParams struct {
	BrandID   int64
	Amount    string
	Currency  string
	Timestamp sql.NullTime
}

func (q *Queries) Create_Sale(ctx context.Context, arg Create_SaleParams) (Sale, error) {
	row := q.db.QueryRowContext(ctx, create_Sale,
		arg.BrandID,
		arg.Amount,
		arg.Currency,
		arg.Timestamp,
	)
	var i Sale
	err := row.Scan(
		&i.ID,
		&i.BrandID,
		&i.Amount,
		&i.Currency,
		&i.Timestamp,
		&i.CreatedAt,
	)
	return i, err
}
