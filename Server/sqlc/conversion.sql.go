// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: conversion.sql

package sqlc

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const create_Conversion = `-- name: Create_Conversion :one
INSERT INTO conversions (
    click_id,
    amount,
    currency,
    weight,
    timestamp
) VALUES (
    $1, $2, $3, $4 ,CURRENT_TIMESTAMP
) RETURNING id, amount, timestamp, currency, click_id, weight
`

type Create_ConversionParams struct {
	ClickID  uuid.NullUUID
	Amount   float64
	Currency sql.NullString
	Weight   sql.NullFloat64
}

func (q *Queries) Create_Conversion(ctx context.Context, arg Create_ConversionParams) (Conversion, error) {
	row := q.db.QueryRowContext(ctx, create_Conversion,
		arg.ClickID,
		arg.Amount,
		arg.Currency,
		arg.Weight,
	)
	var i Conversion
	err := row.Scan(
		&i.ID,
		&i.Amount,
		&i.Timestamp,
		&i.Currency,
		&i.ClickID,
		&i.Weight,
	)
	return i, err
}
